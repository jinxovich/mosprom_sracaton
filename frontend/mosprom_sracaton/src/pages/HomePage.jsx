// src/pages/HomePage.jsx

import React, { useEffect, useState } from 'react';
import api from '../api';
import { useAuthStore } from '../store/authStore';
import { 
  Typography, 
  CircularProgress, 
  Box, 
  Card, 
  CardContent, 
  CardActions, 
  Button, 
  Grid,
  Alert,
  Chip,
  Stack
} from '@mui/material';
import WorkIcon from '@mui/icons-material/Work';
import SchoolIcon from '@mui/icons-material/School';
import { useNavigate } from 'react-router-dom';

const HomePage = () => {
  const navigate = useNavigate();

  const [items, setItems] = useState({ vacancies: [], internships: [] });
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  
  const user = useAuthStore((state) => state.user);

  useEffect(() => {
    const fetchAll = async () => {
      try {
        setLoading(true);
        const [vacanciesRes, internshipsRes] = await Promise.all([
          api.get('/vacancies/'),
          api.get('/internships/')
        ]);
        setItems({
          vacancies: vacanciesRes.data,
          internships: internshipsRes.data,
        });
        setError(null);
      } catch (err) {
        setError("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –∑–∞–ø—É—â–µ–Ω –ª–∏ –±—ç–∫–µ–Ω–¥-—Å–µ—Ä–≤–µ—Ä –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ª–∏ CORS.");
        console.error(err);
      } finally {
        setLoading(false);
      }
    };
    fetchAll();
  }, []);

  // –ò–°–ü–†–ê–í–õ–ï–ù–û: –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–Ω–∞, —Ç–∞–∫ –∫–∞–∫ –æ—Ç–∫–ª–∏–∫ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
  // const handleApply = ...

  if (loading) {
    return (
      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', minHeight: '60vh' }}>
        <CircularProgress size={60} />
      </Box>
    );
  }

  return (
    <Box>
      <Typography variant="h3" component="h1" gutterBottom sx={{ mb: 4, fontWeight: 'bold' }}>
        –û—Ç–∫—Ä—ã—Ç—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –≤ –û–≠–ó "–¢–µ—Ö–Ω–æ–ø–æ–ª–∏—Å –ú–æ—Å–∫–≤–∞"
      </Typography>

      {error && <Alert severity="error" sx={{ mb: 3 }}>{error}</Alert>}
      
      <Grid container spacing={4}>
        {/* –í–∞–∫–∞–Ω—Å–∏–∏ */}
        {/* –ò–°–ü–†–ê–í–õ–ï–ù–û: Grid prop 'size' –∑–∞–º–µ–Ω–µ–Ω –Ω–∞ 'item' */}
        <Grid item xs={12} md={6}>
          <Stack direction="row" spacing={2} alignItems="center" sx={{ mb: 3 }}>
            <WorkIcon color="primary" fontSize="large" />
            <Typography variant="h4" component="h2">
              –í–∞–∫–∞–Ω—Å–∏–∏
            </Typography>
            <Chip label={items.vacancies.length} color="primary" />
          </Stack>

          {items.vacancies.length > 0 ? (
            <Stack spacing={2}>
              {items.vacancies.map(v => (
                <Card key={v.id} variant="outlined" sx={{ 
                  transition: 'all 0.3s',
                  '&:hover': { 
                    boxShadow: 3,
                    transform: 'translateY(-2px)'
                  }
                }}>
                  <CardContent>
                    <Typography variant="h5" gutterBottom>
                      {v.title}
                    </Typography>

                    {v.company_name && (
                      <Typography variant="subtitle2" color="text.secondary" gutterBottom>
                        –ö–æ–º–ø–∞–Ω–∏—è: {v.company_name}
                      </Typography>
                    )}

                    {v.work_location && (
                      <Typography variant="body2" color="text.secondary">
                        üìç –ú–µ—Å—Ç–æ —Ä–∞–±–æ—Ç—ã: {v.work_location}
                      </Typography>
                    )}

                    {v.work_schedule && (
                      <Typography variant="body2" color="text.secondary" sx={{ mt: 0.5 }}>
                        üïí –ì—Ä–∞—Ñ–∏–∫: {v.work_schedule}  
                      </Typography>
                    )}

                    {v.responsibilities && (
                      <Typography variant="body2" sx={{ mt: 1 }}>
                        <strong>–û–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏:</strong> {v.responsibilities.slice(0, 150)}...
                      </Typography>
                    )}

                    {v.requirements && (
                      <Typography variant="body2" sx={{ mt: 1 }}>
                        <strong>–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:</strong> {v.requirements.slice(0, 150)}...
                      </Typography>
                    )}

                    {v.conditions && (
                      <Typography variant="body2" sx={{ mt: 1 }}>
                        <strong>–£—Å–ª–æ–≤–∏—è:</strong> {v.conditions.slice(0, 150)}...
                      </Typography>
                    )}

                    {v.additional_info && (
                      <Typography variant="body2" sx={{ mt: 1 }}>
                        <strong>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ:</strong> {v.additional_info.slice(0, 150)}...
                      </Typography>
                    )}

                    {(v.salary_min || v.salary_max) && (
                      <Typography variant="body2" color="primary" sx={{ mt: 1, fontWeight: 'bold' }}>
                        üí∞ {v.salary_min ? `–æ—Ç ${v.salary_min.toLocaleString()}` : ''} 
                        {v.salary_max ? ` –¥–æ ${v.salary_max.toLocaleString()}` : ''} {v.salary_currency}
                      </Typography>
                    )}
                  </CardContent>

                  {(user?.role === 'applicant') && (
                    <CardActions>
                      <Button 
                        size="small" 
                        variant="contained"
                        onClick={() => {
                          // –ò–°–ü–†–ê–í–õ–ï–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∞–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å —Å–æ —Å–ª—ç—à–µ–º –≤ –Ω–∞—á–∞–ª–µ
                          navigate(`/apply/vacancy/${v.id}`);
                        }}
                      >
                        –û—Ç–∫–ª–∏–∫–Ω—É—Ç—å—Å—è
                      </Button>
                    </CardActions>
                  )}
                </Card>
              ))}
            </Stack>
          ) : (
            <Alert severity="info">–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö –≤–∞–∫–∞–Ω—Å–∏–π –ø–æ–∫–∞ –Ω–µ—Ç.</Alert>
          )}
        </Grid>
        
        {/* –°—Ç–∞–∂–∏—Ä–æ–≤–∫–∏ */}
        <Grid item xs={12} md={6}>
          <Stack direction="row" spacing={2} alignItems="center" sx={{ mb: 3 }}>
            <SchoolIcon color="secondary" fontSize="large" />
            <Typography variant="h4" component="h2">
              –°—Ç–∞–∂–∏—Ä–æ–≤–∫–∏
            </Typography>
            <Chip label={items.internships.length} color="secondary" />
          </Stack>

          {items.internships.length > 0 ? (
            <Stack spacing={2}>
              {items.internships.map(i => (
                <Card key={i.id} variant="outlined" sx={{ 
                  transition: 'all 0.3s',
                  '&:hover': { 
                    boxShadow: 3,
                    transform: 'translateY(-2px)'
                  }
                }}>
                  <CardContent>
                    <Typography variant="h5" gutterBottom>
                      {i.title}
                    </Typography>
                    {i.company_name && (
                      <Typography variant="subtitle2" color="text.secondary" gutterBottom>
                        –ö–æ–º–ø–∞–Ω–∏—è: {i.company_name}
                      </Typography>
                    )}
                    {i.work_location && (
                      <Typography variant="body2" color="text.secondary">
                        üìç –ü–ª–æ—â–∞–¥–∫–∞: {i.work_location}
                      </Typography>
                    )}
                    {i.work_schedule && (
                      <Typography variant="body2" color="text.secondary" sx={{ mt: 0.5 }}>
                        üíº –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å: {i.work_schedule}
                      </Typography>
                    )}
                    {i.responsibilities && (
                      <Typography variant="body2" sx={{ mt: 1 }}>
                        <strong>–û–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏:</strong> {i.responsibilities.slice(0, 150)}...
                      </Typography>
                    )}
                    {i.requirements && (
                      <Typography variant="body2" sx={{ mt: 1 }}>
                        <strong>–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:</strong> {i.requirements.slice(0, 150)}...
                      </Typography>
                    )}
                    {(i.salary_min || i.salary_max) && (
                      <Typography variant="body2" color="primary" sx={{ mt: 1, fontWeight: 'bold' }}>
                        üí∞ {i.salary_min ? `–æ—Ç ${i.salary_min.toLocaleString()}` : ''} 
                        {i.salary_max ? ` –¥–æ ${i.salary_max.toLocaleString()}` : ''} {i.salary_currency}
                      </Typography>
                    )}
                  </CardContent>
                  {(user?.role === 'applicant') && (
                    <CardActions>
                      <Button
                        size="small"
                        variant="contained"
                        onClick={() => {
                          // –ò–°–ü–†–ê–í–õ–ï–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∞–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å —Å–æ —Å–ª—ç—à–µ–º –≤ –Ω–∞—á–∞–ª–µ
                          navigate(`/apply/internship/${i.id}`);
                        }}
                      >
                        –û—Ç–∫–ª–∏–∫–Ω—É—Ç—å—Å—è
                      </Button>
                    </CardActions>
                  )}
                </Card>
              ))}
            </Stack>
          ) : (
            <Alert severity="info">–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö —Å—Ç–∞–∂–∏—Ä–æ–≤–æ–∫ –ø–æ–∫–∞ –Ω–µ—Ç.</Alert>
          )}
        </Grid>
      </Grid>
    </Box>
  );
};

export default HomePage;